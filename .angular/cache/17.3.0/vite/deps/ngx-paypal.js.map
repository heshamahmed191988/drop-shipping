{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-paypal/fesm2020/ngx-paypal.mjs"],
  "sourcesContent": ["import { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nconst _c0 = [\"payPalButtonContainer\"];\nclass ScriptService {\n  constructor(zone) {\n    this.zone = zone;\n  }\n  registerScript(url, globalVar, onReady) {\n    const existingGlobalVar = window[globalVar];\n    if (existingGlobalVar) {\n      // global variable is present = script was already loaded\n      this.zone.run(() => {\n        onReady(existingGlobalVar);\n      });\n      return;\n    }\n    // prepare script elem\n    const scriptElem = document.createElement('script');\n    scriptElem.id = this.getElemId(globalVar);\n    scriptElem.innerHTML = '';\n    scriptElem.onload = () => {\n      this.zone.run(() => {\n        onReady(window[globalVar]);\n      });\n    };\n    scriptElem.src = url;\n    scriptElem.async = true;\n    scriptElem.defer = true;\n    // add script to header\n    document.getElementsByTagName('head')[0].appendChild(scriptElem);\n  }\n  cleanup(globalVar) {\n    // remove script from DOM\n    const scriptElem = document.getElementById(this.getElemId(globalVar));\n    if (scriptElem) {\n      scriptElem.remove();\n    }\n  }\n  getElemId(globalVar) {\n    return `ngx-paypal-script-elem-${globalVar}`;\n  }\n}\n/** @nocollapse */\nScriptService.ɵfac = function ScriptService_Factory(t) {\n  return new (t || ScriptService)(i0.ɵɵinject(i0.NgZone));\n};\n/** @nocollapse */\nScriptService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScriptService,\n  factory: ScriptService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScriptService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }];\n  }, null);\n})();\nclass PayPalScriptService {\n  constructor(scriptService) {\n    this.scriptService = scriptService;\n    this.paypalWindowName = 'paypal';\n  }\n  registerPayPalScript(config, onReady) {\n    this.scriptService.registerScript(this.getUrlForConfig(config), this.paypalWindowName, onReady);\n  }\n  destroyPayPalScript() {\n    this.scriptService.cleanup(this.paypalWindowName);\n  }\n  getUrlForConfig(config) {\n    const params = [{\n      name: 'client-id',\n      value: config.clientId\n    }];\n    if (config.locale) {\n      params.push({\n        name: 'locale',\n        value: config.locale\n      });\n    }\n    if (config.currency) {\n      params.push({\n        name: 'currency',\n        value: config.currency\n      });\n    }\n    if (config.commit) {\n      params.push({\n        name: 'commit',\n        value: config.commit\n      });\n    }\n    if (config.vault) {\n      params.push({\n        name: 'vault',\n        value: config.vault\n      });\n    }\n    if (config.intent) {\n      params.push({\n        name: 'intent',\n        value: config.intent\n      });\n    }\n    if (config.funding) {\n      params.push({\n        name: 'components',\n        value: 'buttons,funding-eligibility'\n      });\n    }\n    if (config.extraParams) {\n      params.push(...config.extraParams);\n    }\n    return `https://www.paypal.com/sdk/js${this.getQueryString(params)}`;\n  }\n  getQueryString(queryParams) {\n    let queryString = '';\n    for (let i = 0; i < queryParams.length; i++) {\n      const queryParam = queryParams[i];\n      if (i === 0) {\n        queryString += '?';\n      } else {\n        queryString += '&';\n      }\n      queryString += `${queryParam.name}=${queryParam.value}`;\n    }\n    return queryString;\n  }\n}\n/** @nocollapse */\nPayPalScriptService.ɵfac = function PayPalScriptService_Factory(t) {\n  return new (t || PayPalScriptService)(i0.ɵɵinject(ScriptService));\n};\n/** @nocollapse */\nPayPalScriptService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PayPalScriptService,\n  factory: PayPalScriptService.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PayPalScriptService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ScriptService\n    }];\n  }, null);\n})();\nclass NgxPaypalComponent {\n  constructor(paypalScriptService, cdr, ngZone) {\n    this.paypalScriptService = paypalScriptService;\n    this.cdr = cdr;\n    this.ngZone = ngZone;\n    /**\r\n     * If enabled, paypal SDK script will be loaded. Useful if you want to have multiple PayPal components on the same page\r\n     * sharing base configuration. In such a case only a single component may register script.\r\n     */\n    this.registerScript = true;\n    /**\r\n     * Emitted when paypal script is loaded\r\n     */\n    this.scriptLoaded = new EventEmitter();\n    this.ngUnsubscribe = new Subject();\n    /**\r\n     * Flag that indicates if paypal should be initialized (required for handling script load events and availability of DOM element)\r\n     */\n    this.initializePayPal = true;\n  }\n  set payPalButtonContainer(content) {\n    this.payPalButtonContainerElem = content;\n  }\n  ngOnChanges(changes) {\n    if (!this.payPalButtonContainerId) {\n      this.payPalButtonContainerId = this.generateElementId();\n    }\n    // first time config setup\n    const config = this.config;\n    if (changes.config.isFirstChange()) {\n      if (config && this.registerScript) {\n        this.initPayPalScript(config, payPal => {\n          // store reference to paypal global script\n          this.payPal = payPal;\n          this.doPayPalCheck();\n        });\n      }\n    }\n    // changes to config\n    if (!changes.config.isFirstChange()) {\n      this.reinitialize(config);\n    }\n  }\n  ngOnDestroy() {\n    this.paypalScriptService.destroyPayPalScript();\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n  ngAfterViewInit() {\n    this.doPayPalCheck();\n  }\n  customInit(payPal) {\n    this.payPal = payPal;\n    this.doPayPalCheck();\n  }\n  reinitialize(config) {\n    this.config = config;\n    this.payPal = undefined;\n    this.paypalScriptService.destroyPayPalScript();\n    this.payPalButtonContainerId = this.generateElementId();\n    this.initializePayPal = true;\n    if (this.payPalButtonContainerElem) {\n      try {\n        while (this.payPalButtonContainerElem.nativeElement.firstChild) {\n          this.payPalButtonContainerElem.nativeElement.removeChild(this.payPalButtonContainerElem.nativeElement.firstChild);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this.cdr.detectChanges();\n    if (this.config) {\n      if (!this.payPal) {\n        this.initPayPalScript(this.config, payPal => {\n          // store reference to paypal global script\n          this.payPal = payPal;\n          this.doPayPalCheck();\n        });\n      } else {\n        this.doPayPalCheck();\n      }\n    }\n  }\n  doPayPalCheck() {\n    if (this.initializePayPal && this.config && this.payPal && this.payPalButtonContainerElem) {\n      // make sure that id is also set\n      if (this.payPalButtonContainerElem.nativeElement.id) {\n        this.initializePayPal = false;\n        this.initPayPal(this.config, this.payPal);\n      }\n    }\n  }\n  initPayPalScript(config, initPayPal) {\n    this.paypalScriptService.registerPayPalScript({\n      clientId: config.clientId,\n      locale: config.advanced?.locale,\n      commit: config.advanced && config.advanced.commit ? config.advanced.commit : undefined,\n      currency: config.currency,\n      vault: config.vault,\n      intent: config.intent,\n      funding: config.fundingSource != undefined || config.fundingSource != null ? true : false,\n      extraParams: config.advanced && config.advanced.extraQueryParams ? config.advanced.extraQueryParams : []\n    }, paypal => {\n      this.scriptLoaded.next(paypal);\n      initPayPal(paypal);\n    });\n  }\n  generateElementId() {\n    return `ngx-captcha-id-${this.generateGuid()}`;\n  }\n  initPayPal(config, paypal) {\n    // Running outside angular zone prevents infinite ngDoCheck lifecycle calls\n    this.ngZone.runOutsideAngular(() => {\n      // https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page\n      const createOrder = (data, actions) => {\n        return this.ngZone.run(() => {\n          if (config.createOrderOnClient && config.createOrderOnServer) {\n            throw Error(`Both 'createOrderOnClient' and 'createOrderOnServer' are defined.\n                    Please choose one or the other.`);\n          }\n          if (!config.createOrderOnClient && !config.createOrderOnServer) {\n            throw Error(`Neither 'createOrderOnClient' or 'createOrderOnServer' are defined.\n                    Please define one of these to create order.`);\n          }\n          if (config.createOrderOnClient) {\n            return actions.order.create(config.createOrderOnClient(data));\n          }\n          if (config.createOrderOnServer) {\n            return config.createOrderOnServer(data);\n          }\n          throw Error(`Invalid state for 'createOrder'.`);\n        });\n      };\n      const createSubscription = (data, actions) => {\n        return this.ngZone.run(() => {\n          if (config.createSubscriptionOnClient) {\n            return actions.subscription.create(config.createSubscriptionOnClient(data));\n          }\n          return;\n        });\n      };\n      const onShippingChange = (data, actions) => {\n        return this.ngZone.run(() => {\n          if (config.onShippingChange) {\n            return config.onShippingChange(data, actions);\n          }\n        });\n      };\n      const buttonsConfig = {\n        style: config.style,\n        fundingSource: undefined,\n        onApprove: (data, actions) => {\n          return this.ngZone.run(() => {\n            if (config.onApprove) {\n              config.onApprove(data, actions);\n            }\n            // capture on server\n            if (config.authorizeOnServer) {\n              return config.authorizeOnServer(data, actions);\n            }\n            // capture on client\n            const onClientAuthorization = config.onClientAuthorization;\n            if (onClientAuthorization) {\n              actions.order.capture().then(details => {\n                this.ngZone.run(() => {\n                  onClientAuthorization(details);\n                });\n              });\n            }\n          });\n        },\n        onError: error => {\n          this.ngZone.run(() => {\n            if (config.onError) {\n              config.onError(error);\n            }\n          });\n        },\n        onCancel: (data, actions) => {\n          this.ngZone.run(() => {\n            if (config.onCancel) {\n              config.onCancel(data, actions);\n            }\n          });\n        },\n        onClick: (data, actions) => {\n          this.ngZone.run(() => {\n            if (config.onClick) {\n              config.onClick(data, actions);\n            }\n          });\n        },\n        onInit: (data, actions) => {\n          this.ngZone.run(() => {\n            if (config.onInit) {\n              config.onInit(data, actions);\n            }\n          });\n        },\n        // Add the functions if they've been created in the config object\n        // The API only allows one of the two to be set\n        ...((config.createOrderOnClient || config.createOrderOnServer) && {\n          createOrder\n        }),\n        ...(config.createSubscriptionOnClient && {\n          createSubscription\n        }),\n        // The onShippingChange callback cannot be used with subscriptions\n        // so we only add it if it is set\n        ...(config.onShippingChange && {\n          onShippingChange\n        })\n      };\n      let fundSource = undefined;\n      switch (config.fundingSource) {\n        case \"PAYPAL\":\n          fundSource = paypal.FUNDING.PAYPAL;\n          break;\n        case \"CARD\":\n          fundSource = paypal.FUNDING.CARD;\n          break;\n        case \"PAYLATER\":\n          fundSource = paypal.FUNDING.PAYLATER;\n          break;\n        case \"CREDIT\":\n          fundSource = paypal.FUNDING.CREDIT;\n          break;\n        case \"VENMO\":\n          fundSource = paypal.FUNDING.VENMO;\n          break;\n        default:\n          break;\n      }\n      if (fundSource != undefined) {\n        buttonsConfig.fundingSource = fundSource;\n        if (config.fundingSource !== \"PAYPAL\") delete buttonsConfig.style?.color;\n      }\n      paypal.Buttons(buttonsConfig).render(`#${this.payPalButtonContainerId}`);\n    });\n  }\n  generateGuid() {\n    let d = new Date().getTime(),\n      d2 = performance && performance.now && performance.now() * 1000 || 0;\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, c => {\n      let r = Math.random() * 16;\n      if (d > 0) {\n        r = (d + r) % 16 | 0;\n        d = Math.floor(d / 16);\n      } else {\n        r = (d2 + r) % 16 | 0;\n        d2 = Math.floor(d2 / 16);\n      }\n      return (c == \"x\" ? r : r & 0x7 | 0x8).toString(16);\n    });\n  }\n}\n/** @nocollapse */\nNgxPaypalComponent.ɵfac = function NgxPaypalComponent_Factory(t) {\n  return new (t || NgxPaypalComponent)(i0.ɵɵdirectiveInject(PayPalScriptService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n/** @nocollapse */\nNgxPaypalComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxPaypalComponent,\n  selectors: [[\"ngx-paypal\"]],\n  viewQuery: function NgxPaypalComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.payPalButtonContainer = _t.first);\n    }\n  },\n  inputs: {\n    config: \"config\",\n    registerScript: \"registerScript\"\n  },\n  outputs: {\n    scriptLoaded: \"scriptLoaded\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[\"payPalButtonContainer\", \"\"], [3, \"id\"]],\n  template: function NgxPaypalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 1, 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx.payPalButtonContainerId);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxPaypalComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: \"ngx-paypal\",\n      template: `\n    <div #payPalButtonContainer [id]=\"payPalButtonContainerId\"></div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: PayPalScriptService\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    config: [{\n      type: Input\n    }],\n    registerScript: [{\n      type: Input\n    }],\n    scriptLoaded: [{\n      type: Output\n    }],\n    payPalButtonContainer: [{\n      type: ViewChild,\n      args: [\"payPalButtonContainer\", {\n        static: false\n      }]\n    }]\n  });\n})();\nclass NgxPayPalModule {}\n/** @nocollapse */\nNgxPayPalModule.ɵfac = function NgxPayPalModule_Factory(t) {\n  return new (t || NgxPayPalModule)();\n};\n/** @nocollapse */\nNgxPayPalModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxPayPalModule,\n  declarations: [NgxPaypalComponent],\n  imports: [CommonModule],\n  exports: [NgxPaypalComponent]\n});\n/** @nocollapse */\nNgxPayPalModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [ScriptService, PayPalScriptService],\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxPayPalModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [NgxPaypalComponent],\n      exports: [NgxPaypalComponent],\n      providers: [ScriptService, PayPalScriptService]\n    }]\n  }], null, null);\n})();\n\n/** Public API */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxPayPalModule, NgxPaypalComponent, PayPalScriptService };\n\n"],
  "mappings": "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",
  "names": []
}
